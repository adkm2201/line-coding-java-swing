/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.digital;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.geom.Line2D;
import java.util.List;
import view.Waveform;

/**
 *
 * @author adkm2
 */
public class ManchesterPanel extends Waveform {

    /**
     * Creates new form NewJPanel
     */
    public ManchesterPanel (List<Boolean> bits) {
        super(bits);
        initComponents();
    }

        @Override
    public void drawGrid(Graphics2D g2d) {
     
        int width = getWidth();
        int height = getHeight();
        int centerY = getCenterY();
        
        g2d.setColor(Color.DARK_GRAY);
        g2d.setStroke(new BasicStroke(2.5f));
        g2d.drawLine(0, centerY, width, centerY);
        
        g2d.setStroke(new BasicStroke(0.5f));
        // Horizontal grid lines
        g2d.drawLine(0, centerY - amplitude, width, centerY - amplitude); // High level                         // Center line
        g2d.drawLine(0, centerY + amplitude, width, centerY + amplitude); // Low level
        
        // Vertical grid lines for each bit
        double bitWidth = getBitWidth();
        for (int i = 0; i <= bits.size(); i++) {
            int x = (int) (i * bitWidth);
            g2d.drawLine(x, 0, x, height);
        }
        
        // Draw level indicators
        drawLevelIndicators(g2d, centerY);
    }
    
    @Override
    public void drawSignal(Graphics2D g2d) {
        if (bits == null || bits.isEmpty()) {
            return;
        }
        
        g2d.setColor(Color.red);
        g2d.setStroke(new BasicStroke(2.5f));
        
        int centerY = getCenterY();
        double bitWidth = getBitWidth();
        
        for (int i = 0; i < bits.size(); i++) {
            int x1 = (int) (i * bitWidth);
            int x2 = (int) ((i + 1) * bitWidth);
            int xMid = (x1 + x2) / 2;
            
        if (i > 1 && (bits.get(i-1)) == bits.get(i)) {
                    g2d.draw(new Line2D.Double(x1, centerY - amplitude, x1, centerY + amplitude));
        }
        if (bits.get(i)) {
                // Bit 1: Low-to-High transition (↗)
                // First half: low level
                g2d.draw(new Line2D.Double(x1, centerY + amplitude, xMid, centerY + amplitude));
                // Transition at middle of bit period
                g2d.draw(new Line2D.Double(xMid, centerY + amplitude, xMid, centerY - amplitude));
                // Second half: high level
                g2d.draw(new Line2D.Double(xMid, centerY - amplitude, x2, centerY - amplitude));
            } else {
                // Bit 0: High-to-Low transition (↘)
                // First half: high level
                g2d.draw(new Line2D.Double(x1, centerY - amplitude, xMid, centerY - amplitude));
                // Transition at middle of bit period
                g2d.draw(new Line2D.Double(xMid, centerY - amplitude, xMid, centerY + amplitude));
                // Second half: low level
                g2d.draw(new Line2D.Double(xMid, centerY + amplitude, x2, centerY + amplitude));
            }
        }
        
    }
    
    /**
     * Draw level indicators showing what each level represents
     */
    private void drawLevelIndicators(Graphics2D g2d, int centerY) {
        g2d.setColor(Color.GRAY);
        g2d.setStroke(new BasicStroke(1.0f));
        
        // High level indicator
        g2d.drawString("1 (High)", 5, centerY - amplitude - 5);
        
        // Low level indicator  
        g2d.drawString("0 (Low)", 5, centerY + amplitude + 15);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
