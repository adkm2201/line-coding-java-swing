/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.digital;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.geom.Line2D;
import java.util.List;
import view.Waveform;

/**
 *
 * @author adkm2
 */
public class NRZPanel extends Waveform {

    /**
     * Creates new form NRZPanel
     */
    public NRZPanel(List<Boolean> bits) {
        super(bits);
        initComponents();        
    }
    
    @Override
    public void drawGrid(Graphics2D g2d) {
        
        int height = getHeight();
        int centerY = height / 2;

        int totalWidth = (bits != null) ? bits.size() * pixelsPerBit : getWidth();
        
        g2d.setColor(Color.DARK_GRAY);
        g2d.setStroke(new BasicStroke(2.5f));
        g2d.drawLine(0, centerY + amplitude, totalWidth, centerY + amplitude);

        // Draw high and low guide lines (thin gray)
        g2d.setColor(Color.DARK_GRAY);
        g2d.setStroke(new BasicStroke(0.5f));
        g2d.drawLine(0, centerY - amplitude, totalWidth, centerY - amplitude); // high

        for (int i = 0; i <= (bits != null ? bits.size() : 0); i++) {
            int x = i * pixelsPerBit;
            g2d.drawLine(x, 0, x, height);
        }
    }
    
    @Override
    public void drawSignal(Graphics2D g2d) {
        
        g2d.setColor(Color.red);
        g2d.setStroke(new BasicStroke(1.75f));
        
        int centerY = getCenterY();
        double bitWidth = getBitWidth();
        
        for (int i = 0; i < bits.size(); i++) {
            int x1 = (int) (i * bitWidth);
            int x2 = (int) ((i + 1) * bitWidth);
            
            // Xác định mức điện áp
            // true (1) = high level (centerY - amplitude)
            // false (0) = low level (centerY + amplitude)
            int y = bits.get(i) ? centerY - amplitude : centerY + amplitude;
            
            // Vẽ đường ngang cho bit hiện tại
            g2d.draw(new Line2D.Double(x1, y, x2, y));
            
            // Vẽ đường dọc chuyển tiếp nếu bit tiếp theo khác
            if (i < bits.size() - 1) {
                boolean nextBit = bits.get(i + 1);
                if (bits.get(i) != nextBit) {
                    int nextY = nextBit ? centerY - amplitude : centerY + amplitude;
                    g2d.draw(new Line2D.Double(x2, y, x2, nextY));
                }
            }
        }
        
        // Vẽ level indicators
        drawLevelIndicators(g2d, centerY);
    }
    
    private void drawLevelIndicators(Graphics2D g2d, int centerY) {
        g2d.setColor(Color.GRAY);
        g2d.setStroke(new BasicStroke(1.0f));
        
        // High level indicator
        g2d.drawString("1 (High)", 5, centerY - amplitude - 5);
        
        // Low level indicator  
        g2d.drawString("0 (Low)", 5, centerY + amplitude + 15);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
